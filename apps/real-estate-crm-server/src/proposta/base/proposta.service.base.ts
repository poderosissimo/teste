/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Proposta as PrismaProposta } from "@prisma/client";

export class PropostaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PropostaCountArgs, "select">): Promise<number> {
    return this.prisma.proposta.count(args);
  }

  async propostas<T extends Prisma.PropostaFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PropostaFindManyArgs>
  ): Promise<PrismaProposta[]> {
    return this.prisma.proposta.findMany<Prisma.PropostaFindManyArgs>(args);
  }
  async proposta<T extends Prisma.PropostaFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PropostaFindUniqueArgs>
  ): Promise<PrismaProposta | null> {
    return this.prisma.proposta.findUnique(args);
  }
  async createProposta<T extends Prisma.PropostaCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PropostaCreateArgs>
  ): Promise<PrismaProposta> {
    return this.prisma.proposta.create<T>(args);
  }
  async updateProposta<T extends Prisma.PropostaUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PropostaUpdateArgs>
  ): Promise<PrismaProposta> {
    return this.prisma.proposta.update<T>(args);
  }
  async deleteProposta<T extends Prisma.PropostaDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PropostaDeleteArgs>
  ): Promise<PrismaProposta> {
    return this.prisma.proposta.delete(args);
  }
}
