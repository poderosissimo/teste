/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Maintenance as PrismaMaintenance } from "@prisma/client";

export class MaintenanceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MaintenanceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.maintenance.count(args);
  }

  async maintenances<T extends Prisma.MaintenanceFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.MaintenanceFindManyArgs>
  ): Promise<PrismaMaintenance[]> {
    return this.prisma.maintenance.findMany<Prisma.MaintenanceFindManyArgs>(
      args
    );
  }
  async maintenance<T extends Prisma.MaintenanceFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.MaintenanceFindUniqueArgs>
  ): Promise<PrismaMaintenance | null> {
    return this.prisma.maintenance.findUnique(args);
  }
  async createMaintenance<T extends Prisma.MaintenanceCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MaintenanceCreateArgs>
  ): Promise<PrismaMaintenance> {
    return this.prisma.maintenance.create<T>(args);
  }
  async updateMaintenance<T extends Prisma.MaintenanceUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MaintenanceUpdateArgs>
  ): Promise<PrismaMaintenance> {
    return this.prisma.maintenance.update<T>(args);
  }
  async deleteMaintenance<T extends Prisma.MaintenanceDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.MaintenanceDeleteArgs>
  ): Promise<PrismaMaintenance> {
    return this.prisma.maintenance.delete(args);
  }
}
