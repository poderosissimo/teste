/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Documento as PrismaDocumento } from "@prisma/client";

export class DocumentoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DocumentoCountArgs, "select">
  ): Promise<number> {
    return this.prisma.documento.count(args);
  }

  async documentos<T extends Prisma.DocumentoFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.DocumentoFindManyArgs>
  ): Promise<PrismaDocumento[]> {
    return this.prisma.documento.findMany<Prisma.DocumentoFindManyArgs>(args);
  }
  async documento<T extends Prisma.DocumentoFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.DocumentoFindUniqueArgs>
  ): Promise<PrismaDocumento | null> {
    return this.prisma.documento.findUnique(args);
  }
  async createDocumento<T extends Prisma.DocumentoCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DocumentoCreateArgs>
  ): Promise<PrismaDocumento> {
    return this.prisma.documento.create<T>(args);
  }
  async updateDocumento<T extends Prisma.DocumentoUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DocumentoUpdateArgs>
  ): Promise<PrismaDocumento> {
    return this.prisma.documento.update<T>(args);
  }
  async deleteDocumento<T extends Prisma.DocumentoDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.DocumentoDeleteArgs>
  ): Promise<PrismaDocumento> {
    return this.prisma.documento.delete(args);
  }
}
