/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Tarefa as PrismaTarefa } from "@prisma/client";

export class TarefaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.TarefaCountArgs, "select">): Promise<number> {
    return this.prisma.tarefa.count(args);
  }

  async tarefas<T extends Prisma.TarefaFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.TarefaFindManyArgs>
  ): Promise<PrismaTarefa[]> {
    return this.prisma.tarefa.findMany<Prisma.TarefaFindManyArgs>(args);
  }
  async tarefa<T extends Prisma.TarefaFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.TarefaFindUniqueArgs>
  ): Promise<PrismaTarefa | null> {
    return this.prisma.tarefa.findUnique(args);
  }
  async createTarefa<T extends Prisma.TarefaCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.TarefaCreateArgs>
  ): Promise<PrismaTarefa> {
    return this.prisma.tarefa.create<T>(args);
  }
  async updateTarefa<T extends Prisma.TarefaUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.TarefaUpdateArgs>
  ): Promise<PrismaTarefa> {
    return this.prisma.tarefa.update<T>(args);
  }
  async deleteTarefa<T extends Prisma.TarefaDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.TarefaDeleteArgs>
  ): Promise<PrismaTarefa> {
    return this.prisma.tarefa.delete(args);
  }
}
