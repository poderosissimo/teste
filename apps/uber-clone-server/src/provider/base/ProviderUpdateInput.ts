/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsNumber,
  ValidateNested,
} from "class-validator";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { ReviewUpdateManyWithoutProvidersInput } from "./ReviewUpdateManyWithoutProvidersInput";
import { Type } from "class-transformer";
import { ServiceBookingUpdateManyWithoutProvidersInput } from "./ServiceBookingUpdateManyWithoutProvidersInput";
import { SupportTicketUpdateManyWithoutProvidersInput } from "./SupportTicketUpdateManyWithoutProvidersInput";

@InputType()
class ProviderUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  profilePicture?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  rating?: number | null;

  @ApiProperty({
    required: false,
    type: () => ReviewUpdateManyWithoutProvidersInput,
  })
  @ValidateNested()
  @Type(() => ReviewUpdateManyWithoutProvidersInput)
  @IsOptional()
  @Field(() => ReviewUpdateManyWithoutProvidersInput, {
    nullable: true,
  })
  reviews?: ReviewUpdateManyWithoutProvidersInput;

  @ApiProperty({
    required: false,
    type: () => ServiceBookingUpdateManyWithoutProvidersInput,
  })
  @ValidateNested()
  @Type(() => ServiceBookingUpdateManyWithoutProvidersInput)
  @IsOptional()
  @Field(() => ServiceBookingUpdateManyWithoutProvidersInput, {
    nullable: true,
  })
  serviceBookings?: ServiceBookingUpdateManyWithoutProvidersInput;

  @ApiProperty({
    required: false,
    type: () => SupportTicketUpdateManyWithoutProvidersInput,
  })
  @ValidateNested()
  @Type(() => SupportTicketUpdateManyWithoutProvidersInput)
  @IsOptional()
  @Field(() => SupportTicketUpdateManyWithoutProvidersInput, {
    nullable: true,
  })
  supportTickets?: SupportTicketUpdateManyWithoutProvidersInput;
}

export { ProviderUpdateInput as ProviderUpdateInput };
