datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  bio            String?
  createdAt      DateTime @default(now())
  email          String?
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  likes          Like[]
  password       String?
  profilePicture Json?
  updatedAt      DateTime @updatedAt
  username       String?
}

model Following {
  createdAt   DateTime    @default(now())
  follower    String?
  following   Following?  @relation(name: "FollowingOnFollowings", fields: [followingId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  followingId String?     @db.ObjectId
  followings  Following[] @relation(name: "FollowingOnFollowings")
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt   DateTime    @updatedAt
}

model Tweet {
  author    String?
  content   String?
  createdAt DateTime  @default(now())
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  likes     Like[]
  timestamp DateTime?
  updatedAt DateTime  @updatedAt
}

model Like {
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  tweet     Tweet?   @relation(fields: [tweetId], references: [id])
  tweetId   String?  @db.ObjectId
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
}
